//
const Cc = Components.classes;
const Ci = Components.interfaces;
const Cu = Components.utils;

Cu.import("resource://gre/modules/Services.jsm");
Cu.import("resource:///modules/CustomizableUI.jsm");

CustomizableUI.destroyWidget("pocket-button");

CustomizableUI.destroyWidget("loop-button");
lockPref("loop.enabled", false);

lockPref("browser.pocket.enabled", false);
lockPref("browser.selfsupport.url", "");

// CLIQZ updates - start

pref("app.update.certs.1.issuerName", "CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US");
pref("app.update.certs.1.commonName", "*.cliqz.com");

pref("app.update.certs.2.issuerName", "CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US");
pref("app.update.certs.2.commonName", "*.cliqz.com");

// CLIQZ updates - end

lockPref("browser.newtab.url", "about:cliqz");
lockPref("browser.startup.page", 3);

function writeFile(fileName, content) {
  var profileDir = Services.dirsvc.get("ProfD", Ci.nsILocalFile);

  profileDir.append("chrome");

  if( !profileDir.exists() || !profileDir.isDirectory() ) {
    profileDir.create(Components.interfaces.nsIFile.DIRECTORY_TYPE, 0777);
  }

  profileDir.append(fileName);

  var fos = Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);
  fos.init(profileDir, -1, -1, false);
  fos.write(content, content.length);
  fos.close();
}

writeFile('userChrome.css', `
  @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
  @-moz-document url("chrome://browser/content/browser.xul") {
    #PanelUI-footer-fxa,
    #PanelUI-fxa-status {
      display: none !important;
    }
  }
`);

writeFile('userContent.css', `
  @-moz-document url(about:preferences) {
    #help-button {
      display: none !important;
    }
    #startupTable {
      display: none !important;
    }
    #category-sync, #category-search {
      display: none !important;
    }
  }
`);
